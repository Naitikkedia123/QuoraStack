<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Simon Says</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
    <link rel="stylesheet" href="/simonsays.css">

</head>
<body>
  <div class="corner-nav">
    <div class="logo-text">Quora</div>
    <a href="/post/game" class="home-icon" title="Go to Home">
      <i class="fas fa-home"></i>
    </a>
  </div>
    <div class="text">
        <h1>Simon Says Game</h1>
        <h3>Highest Score = <%=currentUser.highscore%></h3>
        <h2>Hi <%=currentUser.username%>! Welcome to Simon Says<br>Press any key or tap below to start</h2>
        <button id="startBtn">Start Game</button>
      </div>
    
      <div class="btn-container">
        <div class="line1">
          <div class="btn red" type="button" id="red"></div>
          <div class="btn yellow" type="button" id="yellow"></div>
        </div>
        <div class="line2">
          <div class="btn green" type="button" id="green"></div>
          <div class="btn purple" type="button" id="purple"></div>
        </div>
      </div>
    
      <script>
        let gameSeq = [];
        let userSeq = [];
        const btns = ["red", "yellow", "green", "purple"];
        let started = false;
        let level = 0;
        let highscore = 0;
    
        const h2 = document.querySelector("h2");
        const h3 = document.querySelector("h3");
        const startBtn = document.getElementById("startBtn");
    
        function startGame() {
          if (!started) {
            started = true;
            startBtn.style.display = "none";
            levelup();
          }
        }
    
        document.addEventListener("keydown", startGame);
        startBtn.addEventListener("click", startGame);
    
        function userflash(btn) {
          btn.classList.add("userflash");
          setTimeout(() => {
            btn.classList.remove("userflash");
          }, 200);
        }
    
        function gameflash(btn) {
          btn.classList.add("gameflash");
          setTimeout(() => {
            btn.classList.remove("gameflash");
          }, 300);
        }
    
        function bodyflash() {
          const body = document.querySelector("body");
          body.style.backgroundColor = "red";
          setTimeout(() => {
            body.style.backgroundColor = "black";
          }, 200);
        }
    
        function levelup() {
          userSeq = [];
          level++;
          h2.innerText = `Level ${level}`;
          const idx = Math.floor(Math.random() * 4);
          const btn = btns[idx];
          gameSeq.push(btn);
          const randbtn = document.querySelector(`.${btn}`);
          gameflash(randbtn);
        }
    
        function checkans(idx) {
          if (userSeq[idx] === gameSeq[idx]) {
            if (userSeq.length === gameSeq.length) {
              setTimeout(levelup, 1000);
            }
          } else {
            highscore = Math.max(highscore, level);
            h2.innerHTML = `Game over! Your score is <b>${level}</b>.<br>Press any key or tap Start to restart.`;
            h3.innerText = `Highest Score = ${highscore}`;
            bodyflash();
            updateHighscore(highscore); // NEW FUNCTION
            reset();
          }
      }
      async function updateHighscore(score) {
  try {
    const response = await fetch("/post/simon", {
      method: "PATCH",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ score }),
    });

    const data = await response.json();
    console.log("Highscore update response:", data);
  } catch (err) {
    console.error("Failed to update highscore:", err);
  }
}

        function reset() {
          level = 0;
          gameSeq = [];
          userSeq = [];
          started = false;
          startBtn.style.display = "inline-block";
        }
    
        function btnpress() {
          const btn = this;
          userflash(btn);
          const usercolor = btn.getAttribute("id");
          userSeq.push(usercolor);
          checkans(userSeq.length - 1);
        }
    
        const allbtns = document.querySelectorAll(".btn");
        for (let btn of allbtns) {
          btn.addEventListener("click", btnpress);
        }
      </script>
    </body>
    </html>